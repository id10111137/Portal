/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import Hellper.C_Connection;
import Hellper.Hellper_Portal;
import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.print.PageFormat;
import java.awt.print.Paper;
import java.awt.print.Printable;
import static java.awt.print.Printable.NO_SUCH_PAGE;
import static java.awt.print.Printable.PAGE_EXISTS;
import java.awt.print.PrinterException;
import java.awt.print.PrinterJob;
import java.io.File;
import java.io.IOException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;
import javax.imageio.ImageIO;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author PCIT1
 */
public class JFrame_PaymentConsigmentValue extends javax.swing.JFrame {

    Connection connection;
    Statement stt;
    String sql;
    ResultSet res;
    PreparedStatement ps = null;
    Hellper_Portal hellper_Portal;
    public int nilai = 0;
    public String Doc_Header;

    /**
     * Creates new form JFrame_PaymentConsigmentValue
     */
    public JFrame_PaymentConsigmentValue() {
        initComponents();
        this.hellper_Portal = new Hellper_Portal();
        getValues();
        getDataBankID();
    }

    private void getValues() {

        try {

            sql = "  SELECT SUM(QTY) AS QTY, "
                    + "sum(cast(amount as numeric)) as TOTAL_AMOUNT, "
                    + "sum(cast(amount as numeric)) as TOTAL_NETT  "
                    + "FROM [192.168.12.12].[dbstore_ho].[dbo].[t_pos_log]";

            connection = C_Connection.getConnection();
            stt = connection.createStatement();
            res = stt.executeQuery(sql);

            while (res.next()) {

                edt_qty.setText(res.getString(1));
                edt_totalorder.setText(res.getString(2));
            }

            edt_discount.setText(Integer.toString(hellper_Portal.TotalDisc()));
            edt_netto.setText(Integer.toString(hellper_Portal.TotalNett(hellper_Portal.TotalOrders(), hellper_Portal.TotalDisc())));
            edt_paycard_sum.setText(Integer.toString(hellper_Portal.TotalNett(hellper_Portal.TotalOrders(), hellper_Portal.TotalDisc())));
            res.close();
            stt.close();
        } catch (SQLException e) {
            System.out.println(e.getMessage());
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        edt_qty = new javax.swing.JTextField();
        edt_totalorder = new javax.swing.JTextField();
        edt_discount = new javax.swing.JTextField();
        edt_netto = new javax.swing.JTextField();
        edt_payment = new javax.swing.JTextField();
        edt_change = new javax.swing.JTextField();
        jPanel9 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jC_PayType = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        JC_BankID = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        edt_paycard_sum = new javax.swing.JTextField();
        jPanel10 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jPanel11 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jTextField5 = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jPanel3.setBackground(new java.awt.Color(0, 0, 255));
        jPanel3.setForeground(new java.awt.Color(0, 0, 255));

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Total Qty");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel4.setBackground(new java.awt.Color(0, 0, 204));

        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Total Order");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(58, 58, 58)
                .addComponent(jLabel2)
                .addContainerGap(53, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel5.setBackground(new java.awt.Color(0, 0, 255));

        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Discount");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addComponent(jLabel3)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel6.setBackground(new java.awt.Color(0, 0, 255));

        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Netto");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(61, 61, 61)
                .addComponent(jLabel4)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel4)
                .addContainerGap())
        );

        jPanel7.setBackground(new java.awt.Color(0, 0, 255));

        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Payment");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(59, 59, 59)
                .addComponent(jLabel5)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel5)
                .addContainerGap())
        );

        jPanel8.setBackground(new java.awt.Color(0, 0, 255));

        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Change");

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addComponent(jLabel6)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        edt_qty.setEditable(false);
        edt_qty.setAutoscrolls(false);
        edt_qty.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                edt_qtyActionPerformed(evt);
            }
        });

        edt_totalorder.setEditable(false);
        edt_totalorder.setAutoscrolls(false);

        edt_discount.setEditable(false);
        edt_discount.setAutoscrolls(false);

        edt_netto.setEditable(false);
        edt_netto.setAutoscrolls(false);

        edt_payment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                edt_paymentActionPerformed(evt);
            }
        });

        edt_change.setEditable(false);
        edt_change.setAutoscrolls(false);
        edt_change.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                edt_changeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(edt_qty, javax.swing.GroupLayout.DEFAULT_SIZE, 304, Short.MAX_VALUE)
                    .addComponent(edt_totalorder)
                    .addComponent(edt_discount)
                    .addComponent(edt_netto)
                    .addComponent(edt_payment)
                    .addComponent(edt_change))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(edt_qty)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(edt_totalorder))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(edt_discount)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(edt_netto)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(edt_payment, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(edt_change))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("CASH", jPanel1);

        jLabel7.setText("Pay Type ");

        jC_PayType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "----Pilih----", "Debit Card", "Kredit Card", "Cash & Debit", "Cash & Kredit", " " }));
        jC_PayType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jC_PayTypeActionPerformed(evt);
            }
        });

        jLabel8.setText("Bank ID");

        jLabel9.setText("Card Nomor");

        jLabel10.setText("Pay Nomor");

        jTextField2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextField2MouseClicked(evt);
            }
        });
        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });

        jLabel11.setText("Card Nomor");

        edt_paycard_sum.setEditable(false);
        edt_paycard_sum.setAutoscrolls(false);

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, 98, Short.MAX_VALUE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel9Layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jC_PayType, 0, 404, Short.MAX_VALUE)
                    .addComponent(JC_BankID, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTextField1)
                    .addComponent(jTextField2)
                    .addComponent(edt_paycard_sum))
                .addContainerGap())
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jC_PayType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(JC_BankID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(edt_paycard_sum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(128, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("PAY CARD", jPanel9);

        jLabel12.setText("Rp");

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel12)
                .addGap(18, 18, 18)
                .addComponent(jTextField4, javax.swing.GroupLayout.DEFAULT_SIZE, 481, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(255, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Delivery Charge", jPanel10);

        jLabel13.setText("Jumlah Vocher");

        jLabel14.setText("Total Nilai Voucher");

        jLabel15.setText("Rp. 0,-");

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addComponent(jLabel13)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addComponent(jLabel14)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(367, Short.MAX_VALUE))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(jLabel15))
                .addContainerGap(215, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Entry Voucher", jPanel11);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void edt_paymentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_edt_paymentActionPerformed

        if (Integer.parseInt(edt_payment.getText()) == 0) {
            JOptionPane.showMessageDialog(null, "Jumlah Pembayaran Tidak Sesuai");
        } else if (Integer.parseInt(edt_payment.getText()) <= 0) {
            JOptionPane.showMessageDialog(null, "Jumlah Pembayaran Tidak Sesuai");
        } else if (Integer.parseInt(edt_payment.getText()) < hellper_Portal.TotalNett(hellper_Portal.TotalOrders(), hellper_Portal.TotalDisc())) {
            JOptionPane.showMessageDialog(null, "Jumlah Pembayaran Tidak Sesuai");
        } else {
            int total = Integer.parseInt(edt_payment.getText()) - Integer.parseInt(edt_netto.getText());
            edt_change.setText(Integer.toString(total));

            Doc_Header = hellper_Portal.GetIdTakeOrderHeader();
            try {
                sql = "INSERT INTO [192.168.12.12].[dbstore_ho].[dbo].[t_pos_header]\n"
                        + "           ([doc_id]\n"
                        + "           ,[fiscalyear]\n"
                        + "           ,[plant_id]\n"
                        + "           ,[doc_date]\n"
                        + "           ,[posting_date]\n"
                        + "           ,[jenis_trans]\n"
                        + "           ,[sloc_id]\n"
                        + "           ,[mvt_id]\n"
                        + "           ,[do_id]\n"
                        + "           ,[so_id]\n"
                        + "           ,[billing_id]\n"
                        + "           ,[company_id]\n"
                        + "           ,[reason_id]\n"
                        + "           ,[ref_id]\n"
                        + "           ,[remark]\n"
                        + "           ,[currency_id]\n"
                        + "           ,[amount_recipe]\n"
                        + "           ,[amount_sales]\n"
                        + "           ,[disc]\n"
                        + "           ,[amount_disc]\n"
                        + "           ,[ppn]\n"
                        + "           ,[amount_ppn]\n"
                        + "           ,[amount_dpp]\n"
                        + "           ,[amount_disc_dpp]\n"
                        + "           ,[amount_disc_ppn]\n"
                        + "           ,[amount_nett_sales]\n"
                        + "           ,[amount_nett_ppn]\n"
                        + "           ,[order_id]\n"
                        + "           ,[order_date]\n"
                        + "           ,[flag_closing]\n"
                        + "           ,[closing_date]\n"
                        + "           ,[user_entry]\n"
                        + "           ,[user_update]\n"
                        + "           ,[create_date]\n"
                        + "           ,[modify_date]\n"
                        + "           ,[flag_reverse]\n"
                        + "           ,[reverse_date]\n"
                        + "           ,[flag_approve_tp]\n"
                        + "           ,[approve_tp_date]\n"
                        + "           ,[shift]\n"
                        + "           ,[flag_shift_closing]\n"
                        + "           ,[row_shift_closing]\n"
                        + "           ,[date_shift_closing]\n"
                        + "           ,[counter_print]\n"
                        + "           ,[flag_billing]\n"
                        + "           ,[customer_id]\n"
                        + "           ,[vendor_id]\n"
                        + "           ,[no_order]\n"
                        + "           ,[shift_billing]\n"
                        + "           ,[billing_doc]\n"
                        + "           ,[flag_terima]\n"
                        + "           ,[flag_kirim]\n"
                        + "           ,[koneksi_plant]\n"
                        + "           ,[doc_id_ho]\n"
                        + "           ,[voucher]\n"
                        + "           ,[value_voucher]\n"
                        + "           ,[type_bayar]\n"
                        + "           ,[bank_id]\n"
                        + "           ,[no_bayar_bank]\n"
                        + "           ,[no_kartu_bank]\n"
                        + "           ,[member_id]\n"
                        + "           ,[amount_cash]\n"
                        + "           ,[amount_noncash]\n"
                        + "           ,[delivery_charge]\n"
                        + "           ,[delivery_dpp]\n"
                        + "           ,[delivery_ppn]\n"
                        + "           ,[claim_type]\n"
                        + "           ,[claim_to_name]\n"
                        + "           ,[claim_to_nik]\n"
                        + "           ,[type_trans]\n"
                        + "           ,[plant_from]\n"
                        + "           ,[plant_receive])\n"
                        + "     VALUES\n"
                        + "           ('" + Doc_Header + "',DATEPART(yyyy, GETDATE()),'R009',GETUTCDATE(),GETUTCDATE(),'OUT','DP01',201,'" + Doc_Header + "','" + Doc_Header + "',NULL,'STJM',NULL,NULL,NULL,'IDR',NULL,'" + edt_totalorder.getText() + "',NULL,0.00,0.00,0.00,0.00,0.00,0.00,'" + edt_totalorder.getText() + "',0.00,NULL,getDate(),'Y',getDATE(),'ADMIN',NULL,getDATE(),NULL,NULL,NULL,'N',NULL,1,'Y',NULL,getDATE(),0,'Y','CUST002',NULL,NULL,1,0,'N','N',NULL,NULL,0,0,'C',0,0,0,0," + edt_totalorder.getText() + ",0,0,0.00,0.00,NULL,NULL,NULL,NULL,NULL,NULL)";

                connection = C_Connection.getConnection();
                ps = connection.prepareStatement(sql);
                ps.execute();

                sql = "SELECT [nomor_log_transaksi]\n"
                        + "      ,[material_id]\n"
                        + "      ,[item]\n"
                        + "      ,[qty]\n"
                        + "      ,[price]\n"
                        + "      ,[date]\n"
                        + "      ,[nik]\n"
                        + "      ,[amount]\n"
                        + "  FROM [192.168.12.12].[dbstore_ho].[dbo].[t_pos_log]";
                connection = C_Connection.getConnection();
                stt = connection.createStatement();
                res = stt.executeQuery(sql);

                while (res.next()) {

                    sql = "INSERT INTO [192.168.12.12].[dbstore_ho].[dbo].[t_pos_detail]\n"
                            + "           ([doc_id]\n"
                            + "           ,[fiscalyear]\n"
                            + "           ,[plant_id]\n"
                            + "           ,[itemline]\n"
                            + "           ,[material_id]\n"
                            + "           ,[materialdisplay_id]\n"
                            + "           ,[displaygroup_id]\n"
                            + "           ,[sloc_id]\n"
                            + "           ,[mvt_id]\n"
                            + "           ,[from_sloc]\n"
                            + "           ,[to_sloc]\n"
                            + "           ,[jenis_trans]\n"
                            + "           ,[dk_flag]\n"
                            + "           ,[qty_display]\n"
                            + "           ,[unit_display]\n"
                            + "           ,[qty]\n"
                            + "           ,[unit_id]\n"
                            + "           ,[qty_conv]\n"
                            + "           ,[unit_conv]\n"
                            + "           ,[qty_tp]\n"
                            + "           ,[unit_id_tp]\n"
                            + "           ,[qty_conv_tp]\n"
                            + "           ,[unit_conv_tp]\n"
                            + "           ,[amount_recipe]\n"
                            + "           ,[amount_fg]\n"
                            + "           ,[ppn]\n"
                            + "           ,[dpp]\n"
                            + "           ,[disc_sales]\n"
                            + "           ,[disc_ppn]\n"
                            + "           ,[amount_disc]\n"
                            + "           ,[amount_dpp]\n"
                            + "           ,[amount_ppn]\n"
                            + "           ,[amount_disc_dpp]\n"
                            + "           ,[amount_disc_ppn]\n"
                            + "           ,[potongan_sales]\n"
                            + "           ,[amount_nett_sales]\n"
                            + "           ,[amount_nett_ppn]\n"
                            + "           ,[promo_id]\n"
                            + "           ,[promo_type]\n"
                            + "           ,[promo_value]\n"
                            + "           ,[flag_closing]\n"
                            + "           ,[costcenter_id]\n"
                            + "           ,[good_recipient]\n"
                            + "           ,[text]\n"
                            + "           ,[flag_shift_closing]\n"
                            + "           ,[shift_billing]\n"
                            + "           ,[billing_doc]\n"
                            + "           ,[doc_id_ho]\n"
                            + "           ,[flag_konsinyasi]\n"
                            + "           ,[vvoucher])\n"
                            + "     VALUES\n"
                            + "           ('" + Doc_Header + "',DATEPART(yyyy, GETDATE()),'R009'," + res.getString(3) + ",'" + res.getString(2) + "','" + res.getString(2) + "',NULL,'DP01','201',NULL,NULL,'OUT','H'," + res.getString(4) + ",'BOX'," + res.getString(4) + ",'BOX','" + res.getString(4) + "','BOX',NULL,NULL,NULL,NULL,NULL," + res.getString(4) + ",0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,NULL,'" + res.getString(8) + "',0.00,NULL,NULL,0.00,NULL,NULL,NULL,NULL,'Y',NULL,NULL,NULL,'N',0.00)";

                    connection = C_Connection.getConnection();
                    ps = connection.prepareStatement(sql);
                    ps.execute();

                }

                res.close();
                stt.close();

            } catch (SQLException e) {
            }

            System.out.println(Doc_Header);
            printData();

        }
    }//GEN-LAST:event_edt_paymentActionPerformed


    private void edt_qtyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_edt_qtyActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_edt_qtyActionPerformed

    private void edt_changeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_edt_changeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_edt_changeActionPerformed

    private void jC_PayTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jC_PayTypeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jC_PayTypeActionPerformed

    private void jTextField2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextField2MouseClicked

    }//GEN-LAST:event_jTextField2MouseClicked

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed

        Doc_Header = hellper_Portal.GetIdTakeOrderHeader();

        try {
            sql = "INSERT INTO [192.168.12.12].[dbstore_ho].[dbo].[t_pos_header]\n"
                    + "           ([doc_id]\n"
                    + "           ,[fiscalyear]\n"
                    + "           ,[plant_id]\n"
                    + "           ,[doc_date]\n"
                    + "           ,[posting_date]\n"
                    + "           ,[jenis_trans]\n"
                    + "           ,[sloc_id]\n"
                    + "           ,[mvt_id]\n"
                    + "           ,[do_id]\n"
                    + "           ,[so_id]\n"
                    + "           ,[billing_id]\n"
                    + "           ,[company_id]\n"
                    + "           ,[reason_id]\n"
                    + "           ,[ref_id]\n"
                    + "           ,[remark]\n"
                    + "           ,[currency_id]\n"
                    + "           ,[amount_recipe]\n"
                    + "           ,[amount_sales]\n"
                    + "           ,[disc]\n"
                    + "           ,[amount_disc]\n"
                    + "           ,[ppn]\n"
                    + "           ,[amount_ppn]\n"
                    + "           ,[amount_dpp]\n"
                    + "           ,[amount_disc_dpp]\n"
                    + "           ,[amount_disc_ppn]\n"
                    + "           ,[amount_nett_sales]\n"
                    + "           ,[amount_nett_ppn]\n"
                    + "           ,[order_id]\n"
                    + "           ,[order_date]\n"
                    + "           ,[flag_closing]\n"
                    + "           ,[closing_date]\n"
                    + "           ,[user_entry]\n"
                    + "           ,[user_update]\n"
                    + "           ,[create_date]\n"
                    + "           ,[modify_date]\n"
                    + "           ,[flag_reverse]\n"
                    + "           ,[reverse_date]\n"
                    + "           ,[flag_approve_tp]\n"
                    + "           ,[approve_tp_date]\n"
                    + "           ,[shift]\n"
                    + "           ,[flag_shift_closing]\n"
                    + "           ,[row_shift_closing]\n"
                    + "           ,[date_shift_closing]\n"
                    + "           ,[counter_print]\n"
                    + "           ,[flag_billing]\n"
                    + "           ,[customer_id]\n"
                    + "           ,[vendor_id]\n"
                    + "           ,[no_order]\n"
                    + "           ,[shift_billing]\n"
                    + "           ,[billing_doc]\n"
                    + "           ,[flag_terima]\n"
                    + "           ,[flag_kirim]\n"
                    + "           ,[koneksi_plant]\n"
                    + "           ,[doc_id_ho]\n"
                    + "           ,[voucher]\n"
                    + "           ,[value_voucher]\n"
                    + "           ,[type_bayar]\n"
                    + "           ,[bank_id]\n"
                    + "           ,[no_bayar_bank]\n"
                    + "           ,[no_kartu_bank]\n"
                    + "           ,[member_id]\n"
                    + "           ,[amount_cash]\n"
                    + "           ,[amount_noncash]\n"
                    + "           ,[delivery_charge]\n"
                    + "           ,[delivery_dpp]\n"
                    + "           ,[delivery_ppn]\n"
                    + "           ,[claim_type]\n"
                    + "           ,[claim_to_name]\n"
                    + "           ,[claim_to_nik]\n"
                    + "           ,[type_trans]\n"
                    + "           ,[plant_from]\n"
                    + "           ,[plant_receive])\n"
                    + "     VALUES\n"
                    + "           ('" + Doc_Header + "',DATEPART(yyyy, GETDATE()),'R009',GETUTCDATE(),GETUTCDATE(),'OUT','DP01',201,'" + Doc_Header + "','" + Doc_Header + "',NULL,'STJM',NULL,NULL,NULL,'IDR',NULL,'" + edt_totalorder.getText() + "',NULL,0.00,0.00,0.00,0.00,0.00,0.00,'" + edt_totalorder.getText() + "',0.00,NULL,getDate(),'Y',getDATE(),'ADMIN',NULL,getDATE(),NULL,NULL,NULL,'N',NULL,1,'Y',NULL,getDATE(),0,'Y','CUST002',NULL,NULL,1,0,'N','N',NULL,NULL,0,0,'" + hellper_Portal.PaymentType(jC_PayType.getSelectedItem().toString()) + "','" + hellper_Portal.BankID(JC_BankID.getSelectedItem().toString()) + "','" + jTextField2.getText() + "','" + jTextField1.getText() + "',NULL,0," + edt_totalorder.getText() + ",0,0.00,0.00,NULL,NULL,NULL,NULL,NULL,NULL)";

            connection = C_Connection.getConnection();
            ps = connection.prepareStatement(sql);
            ps.execute();
            sql = "SELECT [nomor_log_transaksi]\n"
                    + "      ,[material_id]\n"
                    + "      ,[item]\n"
                    + "      ,[qty]\n"
                    + "      ,[price]\n"
                    + "      ,[date]\n"
                    + "      ,[nik]\n"
                    + "      ,[amount]\n"
                    + "  FROM [192.168.12.12].[dbstore_ho].[dbo].[t_pos_log]";
            connection = C_Connection.getConnection();
            stt = connection.createStatement();
            res = stt.executeQuery(sql);

            while (res.next()) {

                sql = "INSERT INTO [192.168.12.12].[dbstore_ho].[dbo].[t_pos_detail]\n"
                        + "           ([doc_id]\n"
                        + "           ,[fiscalyear]\n"
                        + "           ,[plant_id]\n"
                        + "           ,[itemline]\n"
                        + "           ,[material_id]\n"
                        + "           ,[materialdisplay_id]\n"
                        + "           ,[displaygroup_id]\n"
                        + "           ,[sloc_id]\n"
                        + "           ,[mvt_id]\n"
                        + "           ,[from_sloc]\n"
                        + "           ,[to_sloc]\n"
                        + "           ,[jenis_trans]\n"
                        + "           ,[dk_flag]\n"
                        + "           ,[qty_display]\n"
                        + "           ,[unit_display]\n"
                        + "           ,[qty]\n"
                        + "           ,[unit_id]\n"
                        + "           ,[qty_conv]\n"
                        + "           ,[unit_conv]\n"
                        + "           ,[qty_tp]\n"
                        + "           ,[unit_id_tp]\n"
                        + "           ,[qty_conv_tp]\n"
                        + "           ,[unit_conv_tp]\n"
                        + "           ,[amount_recipe]\n"
                        + "           ,[amount_fg]\n"
                        + "           ,[ppn]\n"
                        + "           ,[dpp]\n"
                        + "           ,[disc_sales]\n"
                        + "           ,[disc_ppn]\n"
                        + "           ,[amount_disc]\n"
                        + "           ,[amount_dpp]\n"
                        + "           ,[amount_ppn]\n"
                        + "           ,[amount_disc_dpp]\n"
                        + "           ,[amount_disc_ppn]\n"
                        + "           ,[potongan_sales]\n"
                        + "           ,[amount_nett_sales]\n"
                        + "           ,[amount_nett_ppn]\n"
                        + "           ,[promo_id]\n"
                        + "           ,[promo_type]\n"
                        + "           ,[promo_value]\n"
                        + "           ,[flag_closing]\n"
                        + "           ,[costcenter_id]\n"
                        + "           ,[good_recipient]\n"
                        + "           ,[text]\n"
                        + "           ,[flag_shift_closing]\n"
                        + "           ,[shift_billing]\n"
                        + "           ,[billing_doc]\n"
                        + "           ,[doc_id_ho]\n"
                        + "           ,[flag_konsinyasi]\n"
                        + "           ,[vvoucher])\n"
                        + "     VALUES\n"
                        + "           ('" + Doc_Header + "',DATEPART(yyyy, GETDATE()),'R009'," + res.getString(3) + ",'" + res.getString(2) + "','" + res.getString(2) + "',NULL,'DP01','201',NULL,NULL,'OUT','H'," + res.getString(4) + ",'BOX'," + res.getString(4) + ",'BOX','" + res.getString(4) + "','BOX',NULL,NULL,NULL,NULL,NULL," + res.getString(4) + ",0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,NULL,'" + res.getString(8) + "',0.00,NULL,NULL,0.00,NULL,NULL,NULL,NULL,'Y',NULL,NULL,NULL,'N',0.00)";

                connection = C_Connection.getConnection();
                ps = connection.prepareStatement(sql);
                ps.execute();
            }
            res.close();
            stt.close();
        } catch (SQLException e) {
        }
        System.out.println(Doc_Header);
        printData();

    }//GEN-LAST:event_jTextField2ActionPerformed

    private void getDataBankID() {

        try {
            connection = C_Connection.getConnection();
            stt = connection.createStatement();
            sql = "SELECT \n"
                    + "      [bank_desc]\n"
                    + "      \n"
                    + "  FROM [192.168.12.12].[dbstore_ho].[dbo].[m_bank]";
            res = stt.executeQuery(sql);

            while (res.next()) {
                JC_BankID.addItem(res.getString(1));                                      // fungsi ini bertugas menampung isi dari database
            }
            res.close();
            stt.close();

        } catch (SQLException e) {
            System.out.println(e.getMessage());
        }

    }

    private void printData() {

        PrinterJob pj = PrinterJob.getPrinterJob();
        PageFormat pf = pj.defaultPage();
        Paper paper = new Paper();
        paper.setSize(220, 500);
        double margin = 10;
        paper.setImageableArea(margin, margin, paper.getWidth() - margin, paper.getHeight()
                - margin);
        pf.setPaper(paper);

        pj.setPrintable(new MyPrintable(), pf);
        if (pj.printDialog()) {
            try {
                pj.print();

            } catch (PrinterException e) {
                System.out.println(e);
            }
        }

//        try {
//            sql = "DELETE FROM [192.168.12.12].[dbstore_ho].[dbo].[t_pos_log]";
//            connection = C_Connection.getConnection();
//            stt = connection.createStatement();
//            stt.executeUpdate(sql);

            JFrame_Payment_Reprint jFrame_Payment_Reprint = new JFrame_Payment_Reprint(Doc_Header, edt_payment.getText(), edt_change.getText());
            jFrame_Payment_Reprint.setVisible(true);
            this.setVisible(false);

//        } catch (SQLException e) {
//        }

    }

    class MyPrintable implements Printable {

        public int print(Graphics g, PageFormat pf, int pageIndex) {
            hellper_Portal = new Hellper_Portal();
            int count = 0;

            List<String> list;

            if (pageIndex != 0) {
                return NO_SUCH_PAGE;
            }
            Graphics2D g2 = (Graphics2D) g;
            g2.setFont(new Font("Serif", Font.PLAIN, 8));
            g2.setPaint(Color.black);
            Image image = null;
            try {

                File folderInput = new File("C:\\Users\\Logo\\logo.png");
                image = ImageIO.read(folderInput);

            } catch (IOException e) {
                e.printStackTrace();
            }

            g2.drawImage(image, 60, 80, rootPane);

            g2.drawString("GARMELIA BAKERY", 70, 180);
            g2.drawString("STORE HO : ", 90, 190);
            g2.drawString("------------------------------------------------", 40, 200);

            try {

                System.out.println(Doc_Header);
                sql = " SELECT * FROM [192.168.12.12].[dbstore_ho].[dbo].[t_pos_header] WHERE doc_id = '" + Doc_Header + "'";

                connection = C_Connection.getConnection();
                stt = connection.createStatement();
                res = stt.executeQuery(sql);

                while (res.next()) {

                    g2.drawString("" + res.getString(3) + "              " + hellper_Portal.getDate() + "          " + hellper_Portal.getTime() + "", 40, 210);
                    g2.drawString("" + res.getString(1) + "", 40, 220);
                    g2.drawString("Admin               Customer              CASH", 40, 230);
                    g2.drawString("Payment : CASH", 40, 240);

                }
                res.close();
                stt.close();
            } catch (SQLException e) {
                System.out.println(e.getMessage());
            }

//            g2.drawString("R006              18-11-2018          11:24:02", 40, 210);
//            g2.drawString("10000023", 40, 220);
//            g2.drawString("Admin               Customer              CASH", 40, 230);
//            g2.drawString("Payment : Debit B011414", 40, 240);
            g2.drawString("------------------------------------------------", 40, 250);

            try {

                sql = "  SELECT\n"
                        + "	A.[nomor_log_transaksi]\n"
                        + "      ,A.[material_id]\n"
                        + "      ,A.[item]\n"
                        + "      ,A.[qty]\n"
                        + "      ,A.[price]\n"
                        + "      ,A.[date]\n"
                        + "      ,A.[nik]\n"
                        + "      ,A.[amount],\n"
                        + "	   B.[material_name]\n"
                        + "  FROM \n"
                        + "  [192.168.12.12].[dbstore_ho].[dbo].[t_pos_log] AS A,\n"
                        + "  [192.168.12.12].[dbstore_ho].[dbo].[m_material] AS B\n"
                        + "  WHERE\n"
                        + "  A.material_id = B.material_id order by A.item asc";

                connection = C_Connection.getConnection();
                stt = connection.createStatement();
                res = stt.executeQuery(sql);
                list = new ArrayList<>();
                while (res.next()) {
                    g2.drawString("" + res.getString(9) + "             " + res.getString(8) + "", 40, 260 + ++count * 5);
                    g2.drawString("" + res.getString(4) + "x" + res.getString(5) + " ", 40, 265 + ++count * 5);
                    g2.drawString(" ", 40, 270 + ++count * 5);
                    nilai = 270 + ++count * 5;
                }

                System.out.println("nilai : " + nilai);

                res.close();
                stt.close();
            } catch (SQLException e) {
                System.out.println(e.getMessage());
            }

            g2.drawString("-----------------------------------------------+", 40, 320);
            g2.drawString("TOTAL ITEM   :                                  " + hellper_Portal.TotalItems() + "", 40, 330);
            g2.drawString("TOTAL QTY    :                                  " + hellper_Portal.TotalQtys() + "", 40, 340);
            g2.drawString("TOTAL ORDER  :                       " + hellper_Portal.TotalOrders() + "", 40, 350);
            g2.drawString("DISCOUNT       :                         " + hellper_Portal.TotalDisc() + "", 40, 360);
            g2.drawString("NETTO            :                          " + hellper_Portal.TotalNett(hellper_Portal.TotalOrders(), hellper_Portal.TotalDisc()) + "", 40, 370);
            g2.drawString("=====", 150, 380);
            g2.drawString("PAYMENT      :                            " + edt_payment.getText() + "", 40, 390);
            g2.drawString("PAYMENT CARD :                             0", 40, 400);
            g2.drawString("CHANGE       :                                " + edt_change.getText() + "", 40, 410);
            g2.drawString("------------------------------------------------", 40, 420);
            g2.drawString("Harga Sudah Termasuk PPN", 60, 430);
            g2.drawString("TERIMA KASIH ", 70, 440);
            g2.drawString("Barang Yang Sudah DiBeli Tidak Dapat DiTukar", 20, 450);
            g2.drawString("-------------------------------------------------", 40, 460);
            g2.drawString("NPWP : 02.011.654.7-441.00", 65, 470);
            g2.drawString("www.garmeliabakery.com ", 70, 480);
            g2.drawString("Email : marketing@garmeliabakery.com ", 50, 490);

            return PAGE_EXISTS;
        }

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JFrame_PaymentConsigmentValue.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JFrame_PaymentConsigmentValue.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JFrame_PaymentConsigmentValue.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFrame_PaymentConsigmentValue.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JFrame_PaymentConsigmentValue().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> JC_BankID;
    private javax.swing.JTextField edt_change;
    private javax.swing.JTextField edt_discount;
    private javax.swing.JTextField edt_netto;
    private javax.swing.JTextField edt_paycard_sum;
    private javax.swing.JTextField edt_payment;
    private javax.swing.JTextField edt_qty;
    private javax.swing.JTextField edt_totalorder;
    private javax.swing.JComboBox<String> jC_PayType;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    // End of variables declaration//GEN-END:variables
}
